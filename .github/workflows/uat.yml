name: Front-end & Back-end Tests + Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ FRONT-END â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json

      - name: ðŸ“¦ Install deps
        run: npm ci --no-audit --fund=false

      - name: ðŸ§ª Jest + coverage (frontend)
        id: fe-tests
        run: npm run test:coverage -- --ci
        continue-on-error: true # keep going for coverage upload

      - name: ðŸ“‚ Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage

      - name: ðŸ“ˆ Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          files: frontend/coverage/lcov.info
          flags: frontend
          token: ${{ secrets.CODECOV_TOKEN }} # omit if repo is public
          fail_ci_if_error: false

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ BACK-END â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: 20 # backend uses Node 20 LTS
          cache: npm
          cache-dependency-path: ./server/package-lock.json

      - name: ðŸ“¦ Install deps
        run: npm ci --no-audit --fund=false

      - name: ðŸ§ª Jest + coverage (backend)
        id: be-tests
        run: npm run test -- --coverage --ci
        continue-on-error: true

      - name: ðŸ“‚ Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: server/coverage

      - name: ðŸ“ˆ Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          files: server/coverage/lcov.info
          flags: backend
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
